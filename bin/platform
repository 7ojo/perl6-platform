#!/usr/bin/env perl6

use v6;
use lib 'lib';

sub load-module(:$name, :$domain, :$data-path) {
    require ::($name);
    ::($name).new(:$domain, :$data-path);
}

#| Start platform
# Example: $ platform start
# Example: $ platform start -p project-butterfly
# Example: $ platform start -c custom-setup.yml -p project-butterfly
multi sub MAIN('start', Str :$project?, Str :$config?, Str :$domain = 'local', Str :$data-path = '~/.platform') {
    # TODO: Figure this out how to do this without if-statement
    if $project {
        load-module(:name<Platform>, :$domain, :$data-path).start($project);
    } else {
        load-module(:name<Platform>, :$domain, :$data-path).start;
    }
}

#| Stop platform
multi sub MAIN('stop', Str :$project?, Str :$domain = 'local', Str :$data-path = '~/.platform') {
    # TODO: Figure this out how to do this without if-statement
    if $project {
        load-module(:name<Platform>, :$domain, :$data-path).stop($project);
    } else {
        load-module(:name<Platform>, :$domain, :$data-path).stop;
    }
}

#| Generation of RSA Private Key
multi sub MAIN('ssl', 'genrsa', Str :$domain = 'local', Str :$data-path = '~/.platform') {
    load-module(:name<Platform>, :$domain, :$data-path).ssl('genrsa');
}

#| Generation of authentication keys
multi sub MAIN('ssh', 'keygen', Str :$domain = 'local', Str :$data-path = '~/.platform') {
    load-module(:name<Platform>, :$domain, :$data-path).ssh('keygen'); 
}

# #| TODO: ssh connect
# Example: $ platform ssh connect --from=project-butterfly --to=project-snail --user=platorc
# multi sub MAIN('ssh', 'connect', Str :$from!, Str :$to!, Str :$user = 'platorc') {}

# #| Setup passwordless SUDO commands for account
# Example: $ platform sudo grant -p project-butterfly -u platorc -h ALL -r '(www-data:www-data)' -c '/bin/installer'
# multi sub MAIN('sudo', 'grant', Str :p(:$project)!, Str :u(:$user) = 'platorc', Str :h(:$host) = 'ALL', Str :r(:$runas) = 'ALL', Str :c(:$command)!) {}

